# -*- python -*-

load(
    "@drake//tools/skylark:drake_cc.bzl",
    "drake_cc_binary",
    "drake_cc_googletest",
    "drake_cc_library",
)
load(
    "@drake//tools/vector_gen:vector_gen.bzl",
    "drake_cc_vector_gen_library",
)
load("//tools/lint:lint.bzl", "add_lint_tests")

drake_cc_binary(
    name = "mpm",
    srcs = [
        "main.cpp",
    ],
    deps = [
        ":MPMDriver",
        "//common:essential",
        "//math:geometric_transform",
        "@partio",
    ],
)

drake_cc_library(
    name = "BSpline",
    srcs = [
        "BSpline.cc",
    ],
    hdrs = [
        "BSpline.h",
    ],
    deps = [
        "//common:essential",
    ],
)

drake_cc_library(
    name = "MathUtils",
    srcs = [
        "MathUtils.cc",
    ],
    hdrs = [
        "MathUtils.h",
    ],
    deps = [
        "//common:essential",
    ],
)

drake_cc_library(
    name = "ConstitutiveModel",
    srcs = [
        "ConstitutiveModel.cc",
    ],
    hdrs = [
        "ConstitutiveModel.h",
    ],
    deps = [
        "//common:essential",
        "//multibody/fem:matrix_utilities",
    ],
)

drake_cc_library(
    name = "Particles",
    srcs = [
        "Particles.cc",
    ],
    hdrs = [
        "Particles.h",
    ],
    deps = [
        ":ConstitutiveModel",
        ":MathUtils",
        ":TotalMassAndMomentum",
        "//common:essential",
    ],
)

drake_cc_library(
    name = "Grid",
    srcs = [
        "Grid.cc",
    ],
    hdrs = [
        "Grid.h",
    ],
    deps = [
        ":KinematicCollisionObjects",
        ":TotalMassAndMomentum",
        "//common:essential",
        "//geometry/proximity:posed_half_space",
    ],
)

drake_cc_library(
    name = "CollisionObject",
    srcs = [
        "CollisionObject.cc",
    ],
    hdrs = [
        "CollisionObject.h",
    ],
    deps = [
        ":AnalyticLevelSet",
        "//common:essential",
        "//math:geometric_transform",
        "//multibody/fem:matrix_utilities",
        "//multibody/math:spatial_algebra",
    ],
)

drake_cc_library(
    name = "KinematicCollisionObjects",
    srcs = [
        "KinematicCollisionObjects.cc",
    ],
    hdrs = [
        "KinematicCollisionObjects.h",
    ],
    deps = [
        ":CollisionObject",
        "//common:essential",
    ],
)

drake_cc_library(
    name = "GravitationalForce",
    srcs = [
        "GravitationalForce.cc",
    ],
    hdrs = [
        "GravitationalForce.h",
    ],
    deps = [
        ":Grid",
        "//common:essential",
    ],
)

drake_cc_library(
    name = "AnalyticLevelSet",
    srcs = [
        "AnalyticLevelSet.cc",
    ],
    hdrs = [
        "AnalyticLevelSet.h",
    ],
    deps = [
        "//common:essential",
        "//math:geometric_transform",
    ],
)

drake_cc_library(
    name = "TotalMassAndMomentum",
    hdrs = [
        "TotalMassAndMomentum.h",
    ],
    deps = [
        "//common:essential",
    ],
)

drake_cc_library(
    name = "MPMTransfer",
    srcs = [
        "MPMTransfer.cc",
    ],
    hdrs = [
        "MPMTransfer.h",
    ],
    deps = [
        ":BSpline",
        ":Grid",
        ":Particles",
        "//common:essential",
    ],
)

drake_cc_library(
    name = "particles_to_bgeo",
    srcs = [
        "particles_to_bgeo.cc",
    ],
    hdrs = [
        "particles_to_bgeo.h",
    ],
    deps = [
        "//common:essential",
        "//common:filesystem",
        "//common:find_resource",
        "//common:temp_directory",
        "@partio",
    ],
)

drake_cc_library(
    name = "poisson_disk_sampling",
    hdrs = [
        "poisson_disk_sampling.h",
        "//common:eigen_types.h",
    ],
)

drake_cc_library(
    name = "MPMParameters",
    hdrs = [
        "MPMParameters.h",
    ],
    deps = [
        "//common:essential",
    ],
)

drake_cc_library(
    name = "MPMDriver",
    srcs = [
        "MPMDriver.cc",
    ],
    hdrs = [
        "MPMDriver.h",
    ],
    deps = [
        ":AnalyticLevelSet",
        ":ConstitutiveModel",
        ":GravitationalForce",
        ":Grid",
        ":MPMParameters",
        ":MPMTransfer",
        ":Particles",
        ":particles_to_bgeo",
        ":poisson_disk_sampling",
        "//common:essential",
        "//math:geometric_transform",
        "//multibody/math:spatial_algebra",
    ],
)

drake_cc_googletest(
    name = "particles_to_bgeo_test",
    deps = [
        ":particles_to_bgeo",
        "//common:filesystem",
        "//common:temp_directory",
        "//common/test_utilities:eigen_matrix_compare",
    ],
)

drake_cc_googletest(
    name = "BSpline_test",
    deps = [
        ":BSpline",
        "//common/test_utilities:eigen_matrix_compare",
    ],
)

drake_cc_googletest(
    name = "MathUtils_test",
    deps = [
        ":MathUtils",
        "//common/test_utilities:eigen_matrix_compare",
    ],
)

drake_cc_googletest(
    name = "Particles_test",
    deps = [
        ":Particles",
        ":TotalMassAndMomentum",
        "//common/test_utilities:eigen_matrix_compare",
        "//math:geometric_transform",
    ],
)

drake_cc_googletest(
    name = "Grid_test",
    deps = [
        ":AnalyticLevelSet",
        ":Grid",
        ":TotalMassAndMomentum",
        "//common/test_utilities:eigen_matrix_compare",
        "//geometry/proximity:posed_half_space",
        "//math:geometric_transform",
    ],
)

drake_cc_googletest(
    name = "ConstitutiveModel_test",
    deps = [
        ":ConstitutiveModel",
        "//common:essential",
        "//common/test_utilities:eigen_matrix_compare",
        "//math:geometric_transform",
    ],
)

drake_cc_googletest(
    name = "CollisionObject_test",
    deps = [
        ":CollisionObject",
        "//common:essential",
        "//common/test_utilities:eigen_matrix_compare",
        "//geometry/proximity:posed_half_space",
        "//math:geometric_transform",
    ],
)

drake_cc_googletest(
    name = "GravitationalForce_test",
    deps = [
        ":GravitationalForce",
        "//common:essential",
        "//common/test_utilities:eigen_matrix_compare",
    ],
)

drake_cc_googletest(
    name = "AnalyticLevelSet_test",
    deps = [
        ":AnalyticLevelSet",
        "//common:essential",
        "//common/test_utilities:eigen_matrix_compare",
    ],
)

drake_cc_googletest(
    name = "MPMTransfer_test",
    deps = [
        ":BSpline",
        ":Grid",
        ":MPMTransfer",
        ":Particles",
        ":TotalMassAndMomentum",
        "//common:essential",
        "//common/test_utilities:eigen_matrix_compare",
    ],
)

add_lint_tests()
